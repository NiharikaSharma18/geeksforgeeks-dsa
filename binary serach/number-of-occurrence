	int count(int arr[], int n, int x) {
	    // code here
	    int p=first(arr,n,x);
	    int y=last(arr,n,x);
	    if(p==-1 || y==-1)
	    return 0;
	    int r=y-p+1;
	    return r;
	}
	int first(int arr[], int n, int x)
	{
	    int s=0,end=n-1,res=-1;
	    while(s<=end){
	        int mid=(s+end)/2;
	        if(arr[mid]==x)
	        {   res=mid;
	            end =mid-1;
	        }
	        else if(arr[mid]<x){
	           
	             s=mid+1;
	        }
	        else if(arr[mid]>x){
	            end=mid-1;
	        }
	    }
	    return res;
	}
		int last(int arr[], int n, int x)
	{
	    int s=0,end=n-1,res=-1;
	    while(s<=end){
	        int mid=(s+end)/2;
	        if(arr[mid]==x)
	        {   res=mid;
	            s=mid+1;
	        }
	        else if(arr[mid]<x){
	           
	             s=mid+1;
	        }
	        else if(arr[mid]>x){
	            end=mid-1;
	        }
	    }
	    return res;
	}
};
time complexity:o(log n)
space complexity:o(1)
